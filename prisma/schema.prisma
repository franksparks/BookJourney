// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  username       String
  hashedPassword String
  email          String
  profilePicture String?
  createdAt      DateTime @default(now())
  reviews        Review[]
  lists          List[]
}

model Book {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  isbn          String
  googleBooksId String  // for sync process
  title         String
  author        String
  description   String?
  categories    String[]
  pages         Int?
  publisher     String?
  publishYear   Int?
  language      String?
  cover         String?
  ratingAverage Int?
  authorIDs     String[]  @db.ObjectId
  authors       Author[]  @relation(fields: [authorIDs], references: [id])
  reviews       Review[]
  lists         List[]    @relation(fields: [listIDs], references: [id])
  listIDs       String[]  @db.ObjectId
}

model Author {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  bookIDs   String[]  @db.ObjectId
  books     Book[]  @relation(fields: [bookIDs], references: [id])
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  bookId    String   @db.ObjectId
  book      Book     @relation(fields: [bookId], references: [id])
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
}

model List {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  bookIDs   String[]  @db.ObjectId
  books     Book[]  @relation(fields: [bookIDs], references: [id])
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
}
